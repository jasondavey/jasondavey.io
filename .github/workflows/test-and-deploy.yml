name: Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job to run Cypress tests in parallel with recording to Cypress Cloud
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Continue with other containers even if one fails
      matrix:
        containers: [1, 2] # Run tests in parallel with 2 containers
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate build info
        run: node scripts/generate-build-info.cjs

      - name: Build the website
        run: npm run build

      # Run Cypress tests with recording to Cypress Cloud
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          # Start the preview server for the built site
          start: npm run preview -- --port 8080
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120
          # Enable recording to Cypress Cloud
          record: true
          parallel: true
          group: 'UI Tests'
          # Use the baseUrl from cypress.config.cjs
        env:
          # Pass the Cypress record key from GitHub secrets
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Job to deploy to Vercel if tests passed
  deploy:
    needs: cypress-run # Only run after tests have passed
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main' # Only deploy from main branch
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Trigger Production Deploy on Vercel
        run: |
          curl -X POST "${{ secrets.VERCEL_PROD_DEPLOY_HOOK }}"
        
      - name: Deployment Status
        run: echo "Deployment triggered successfully!"
