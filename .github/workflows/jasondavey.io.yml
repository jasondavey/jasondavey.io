name: JasonDavey.io CI/CD Pipeline

on:
  push:
    branches:
      - main # Production branch
      - dev  # Development branch
  workflow_dispatch: # Also allows manual runs from the GitHub UI

permissions:
  contents: write  # Need write permission for auto-merge
  deployments: read

jobs:
  runCypressTestsAgainstVercelPreview:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Capture Vercel preview URL
        id: vercelPreviewWait
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 180
      
      - name: Print Vercel preview URL
        run: echo "Vercel URL - ${{ steps.vercelPreviewWait.outputs.url }}"
      
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for branch comparison
      
      - name: Run Cypress Against Vercel Preview
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: false
          config: baseUrl=${{ steps.vercelPreviewWait.outputs.url }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      
      # Deploy to production when tests pass on main branch
      - name: Deploy to Production
        if: success() && github.ref == 'refs/heads/main'
        run: curl -X POST "${{ secrets.VERCEL_PROD_DEPLOY_HOOK }}"

      # Direct merge from dev to main when tests pass on dev branch
      - name: Setup Git Identity
        if: success() && github.ref == 'refs/heads/dev'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      # Fetch all branches and perform merge
      - name: Direct merge dev to main
        if: success() && github.ref == 'refs/heads/dev'
        run: |
          git fetch origin
          git checkout main
          git merge --ff-only origin/dev
          git push origin main
